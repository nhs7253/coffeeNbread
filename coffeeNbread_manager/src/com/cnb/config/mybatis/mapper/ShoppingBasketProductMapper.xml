<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cnb.config.mybatis.mapper.ShoppingBasketProductMapper">







	<!--장바구니 타입 조회. -->
	<resultMap type="ShoppingBasketProduct" id="ShoppingBasketProduct-resultmap">
		<id column="user_id" property="userId" />
		<result column="store_id" property="storeId" />
		<result column="product_id" property="productId" />
		<result column="product_count" property="productCount" />
		<result column="product_store_id" property="productStoreId" />
	</resultMap>

	<resultMap id="ShoppingBasketProduct-product-resultmap" type="ShoppingBasketProduct"
		extends="ShoppingBasketProduct-resultmap">

		<association property="product"
			resultMap="com.cnb.config.mybatis.mapper.ProductMapper.product-productPicture-resultmap" />
	</resultMap>

	<resultMap
		id="ShoppingBasketProduct-product-store-productPicture-resultmap"
		type="ShoppingBasketProduct" extends="ShoppingBasketProduct-resultmap">
		<association property="product"
			resultMap="com.cnb.config.mybatis.mapper.ProductMapper.product-productPicture-resultmap" />
		<association property="store"
			resultMap="com.cnb.config.mybatis.mapper.StoreMapper.store-resultmap" />
	</resultMap>


	<!--단순히 장바구니 테이블목록 조회 selectList -->
	<select id="selectShoppingBasketProductList" parameterType="map"
		resultMap="ShoppingBasketProduct-resultmap">

		select product_id,
		user_id,
		store_id,
		product_count,
		product_store_id
		from shopping_basket_product
		where user_id=#{userId}
		AND store_id=#{storeId}
	</select>


	<!--나중에 장바구니목록에 그대로 띄워줄 selectList -->
	<select id="selectShoppingBasketProductListByStoreIdAndUserId"
		parameterType="map"
		resultMap="ShoppingBasketProduct-product-store-productPicture-resultmap">
		select
		s.store_name,
		pp.product_picture,
		p.product_category,
		p.product_name,
		p.product_id,
		sbp.product_count
		from store s, product p,
		product_picture pp, shopping_basket_product sbp
		where
		s.store_id=p.store_id
		and pp.product_id=p.product_id
		and
		sbp.product_id=p.product_id
		and sbp.user_id =#{userId}
		and
		sbp.store_id=#{storeId}
	</select>


	<!--제품아이디별 장바구니에 넣는 insert -->
	<insert id="insertShoppingBasketProduct" parameterType="ShoppingBasketProduct">
		INSERT
		INTO Shopping_Basket_Product VALUES (
		#{productId},
		#{userId},
		#{storeId},
		#{productCount},
		#{productStoreId})
	</insert>



	<!--제품아이디와 유저아이디로 장바구니목록 삭제 -->
	<delete id="deleteShoppingBasketProductByProductIdAndUserId"
		parameterType="map">
		DELETE FROM shopping_basket_product
		WHERE product_id =
		#{productId}
		AND user_id=#{userId}
	</delete>

	<!--장바구니목록에있는 제품개수 수정할떄./제품아이디를 같은거 넣을때 업데이트용으로도 쓰임. -->
	<update id="updateShoppingBasketProductCount" parameterType="ShoppingBasketProduct">
		UPDATE shopping_basket_product
		SET user_id = #{userId},
		store_id =
		#{storeId},
		product_id = #{productId},
		product_count = #{productCount},
		product_store_id = #{productStoreId}
		WHERE product_id=#{productId}
		AND
		store_id=#{storeId}
		AND user_id=#{userId}
	</update>


	<!--장바구니 목록 삭제할때 필요. -->
	<select id="selectShoppingBasketProductByProductIdAndUserId"
		parameterType="map"
		resultMap="ShoppingBasketProduct-product-store-productPicture-resultmap">
		select
		sbp.user_id,
		sbp.store_id,
		sbp.product_store_id,
		s.store_name,
		pp.product_picture,
		p.product_category,
		p.product_name,
		p.product_id,
		sbp.product_count
		from store s, product p, product_picture
		pp, shopping_basket_product sbp
		where s.store_id=p.store_id
		and
		pp.product_id=p.product_id
		and sbp.product_id=p.product_id
		and
		sbp.user_id =#{userId}
		and sbp.product_id=#{productId}
	</select>

	<!--장바구니에 넣은 제품 총가격 구하기 -->
	<select id="selectAllProductPriceByUserIdAndStoreId"
		parameterType="map" resultMap="ShoppingBasketProduct-product-resultmap">
		select p.product_price,
		sbp.product_count
		from product p, shopping_Basket_Product sbp
		where p.product_id=sbp.product_id
		And sbp.user_id=#{userId}
		And sbp.store_id=#{storeId}
	</select>

               
<!--장바구니 목록 전체 페이징 원함.-->
<select id="selectShoppingBasketProductCountForPagingCount" parameterType="map" resultType="int">
		<![CDATA[
		SELECT COUNT(*)
			FROM(
					SELECT rownum rnum, 
						   store_name,
							product_picture,
							product_category,
							product_name,
							product_id,
							product_count
					FROM(
						SELECT 
							   s.store_name,
							   pp.product_picture,
							   p.product_category,
							   p.product_name,
							   sbp.product_id,
							   sbp.product_count
						FROM	shopping_basket_product sbp,product p,store s, product_picture pp
							WHERE sbp.user_id = #{userId} 
							AND sbp.store_id = #{storeId}
					) 
					WHERE rownum <= #{endIndex}
			)
			WHERE rnum >= #{startIndex}
		]]>
	</select>

<!--장바구니 목록 카테고리별 페이징 원함.-->
<select id="selectShoppingBasketProductCountForPagingToProductCategoryCount" parameterType="map" resultType="int">
		<![CDATA[
		SELECT COUNT(*)
			FROM(
					SELECT rownum rnum, 
						   store_name,
							product_picture,
							product_category,
							product_name,
							product_id,
							product_count
					FROM(
						SELECT 
							   s.store_name,
							   pp.product_picture,
							   p.product_category,
							   p.product_name,
							   sbp.product_id,
							   sbp.product_count
						FROM	shopping_basket_product sbp,product p,store s, product_picture pp
							WHERE sbp.user_id = #{userId} 
							AND sbp.store_id = #{storeId}
							AND p.product_category=#{productCategory} 
					) 
					WHERE rownum <= #{endIndex}
			)
			WHERE rnum >= #{startIndex}
		]]>
	</select>


	<!--장바구니 목록 페이징으로 조회 - 유저아이디와 매장아이디로 조회. -->
	<select id="selectShoppingBasketProductListForPaging"
		resultMap="ShoppingBasketProduct-product-store-productPicture-resultmap"
		parameterType="map">
		<![CDATA[
			SELECT          store_name,
							product_picture,
							product_category,
							product_name,
							product_id,
							product_count
					
			FROM(
					SELECT  rownum rnum,
							store_name,
							product_picture,
							product_category,
							product_name,
							product_id,
							product_count
					  FROM(
							SELECT  s.store_name,
		                            pp.product_picture,
		                            p.product_category,
		                            p.product_name,
		                            p.product_id,
		                            sbp.product_count
							FROM	shopping_basket_product sbp,product p,store s, product_picture pp
							WHERE sbp.user_id = #{userId} 
							AND   sbp.store_id = #{storeId}
					) 
					WHERE rownum <= #{endIndex}
			)
			WHERE rnum >= #{startIndex}
		]]>
	</select>

<!--장바구니 목록 페이징으로 조회 - 유저아이디와 매장아이디로 조회. - 제품카테고리별 파악하기위한 페이징. -->
	<select id="selectShoppingBasketProductListForPagingToProductCategory"
		resultMap="ShoppingBasketProduct-product-store-productPicture-resultmap"
		parameterType="map">
		<![CDATA[
			SELECT          store_name,
							product_picture,
							product_category,
							product_name,
							product_id,
							product_count
					
			FROM(
					SELECT  rownum rnum,
							store_name,
							product_picture,
							product_category,
							product_name,
							product_id,
							product_count
					  FROM(
							SELECT  s.store_name,
		                            pp.product_picture,
		                            p.product_category,
		                            p.product_name,
		                            p.product_id,
		                            sbp.product_count
							FROM	shopping_basket_product sbp,product p,store s, product_picture pp
							WHERE sbp.user_id = #{userId} 
							AND sbp.store_id = #{storeId}
							AND sbp.product_category= #{productCategory}
					) 
					WHERE rownum <= #{endIndex}
			)
			WHERE rnum >= #{startIndex}
		]]>
	</select>





</mapper>