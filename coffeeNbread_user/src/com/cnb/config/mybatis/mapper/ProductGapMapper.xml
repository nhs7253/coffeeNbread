<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cnb.config.mybatis.mapper.ProductGapMapper">
	<!-- 
		ProductGap 테이블 관련 mapper
		+ 제품 증감폭 등록
		+ 제품 증감폭 수정
		+ 제품 증감폭과 제품들 모두 조회
		+ 제품 증감 식별 코드로 제품 증감폭과 해당 제품들 조회
	 -->
	
	<!-- insert -->
	<insert id="insertProductGap" parameterType="productGap">
		INSERT INTO product_gap VALUES (
										#{identifyCode},
										#{productGap},
										#{productId},
										#{storeId} )
	</insert>
	
	<!-- update -->
	<update id="updateProductGap" parameterType="productGap">
		UPDATE product_gap
		SET	   identify_code = #{identifyCode},   
		 	   product_gap = #{productGap}
		WHERE  store_id = #{storeId} AND product_id = #{productId}
	</update>	
	
	
	<!-- select -->
	<!-- resultMap -->
	<resultMap id="productGap-resultmap" type="productGap">
		<result column="identify_code" property="identifyCode"/>
		<result column="product_gap" property="productGap"/>
		<result column="product_id" property="productId"/>
		<result column="store_id" property="storeId"/>
	</resultMap>
	
	<resultMap id="productGap-product-resultmap" type="productGap" extends="productGap-resultmap">
 		<association property="productList" resultMap="com.cnb.config.mybatis.mapper.ProductMapper.product-resultmap"/>
	</resultMap>
	
	<!-- selectProductGapListCountByMethod -->
	<select id="selectProductGapListCountByMethod" parameterType="map" resultType="int">
		<choose>
			<when test="method == 'identifyCode'">
			<![CDATA[
				SELECT COUNT(product_id)
				FROM product_gap
				WHERE identify_code = #{methodContent}
				AND	  store_id = #{storeId}
			]]>
			</when>
			<when test="method == 'productId'">
			<![CDATA[
				SELECT COUNT(product_id)
				FROM product_gap
				WHERE product_id = #{methodContent}
				AND	  store_id = #{storeId}
			]]>
			</when>
			<when test="method == 'productGap'">
			<![CDATA[
				SELECT COUNT(product_id)
				FROM product_gap
				WHERE product_gap = #{methodContent}
				AND	  store_id = #{storeId}
			]]>
			</when>
			<otherwise>	<!-- method == 'storeId' 매장의 전체 제품 증감폭 조회 -->
			<![CDATA[	
				SELECT COUNT(product_id)
				FROM product_gap
				WHERE store_id = #{storeId}
			]]>
			</otherwise>
		</choose>
	</select>
	
	
	<select id="selectProductGapListByStoreId" parameterType="map" resultMap="productGap-product-resultmap">
		<![CDATA[
			SELECT  identify_code,
					product_gap,
					product_id,
					store_id,
					product_name,
					product_category			
			FROM(
					SELECT  rownum rnum, 
							identify_code,
							product_gap,
							product_id,
							store_id,
							product_name,
							product_category
					FROM(
							SELECT  g.identify_code,
									g.product_gap, 
									g.product_id, 
									g.store_id, 
									p.product_name, 
									p.product_category
							FROM	product_gap g, product p
							WHERE  g.store_id = p.store_id
							AND	   g.product_id = p.product_id
							AND    g.store_id = #{storeId}
					) 
					WHERE rownum <= #{endIndex}
			)
			WHERE rnum >= #{startIndex}
		]]>
	</select>

	<select id="selectProductGapListByIdentifyCodeByStoreIdAndIdentifyCode" parameterType="map" resultMap="productGap-product-resultmap">
		<![CDATA[
			SELECT  identify_code,
					product_gap,
					product_id,
					store_id,
					product_name,
					product_category			
			FROM(
					SELECT  rownum rnum, 
							identify_code,
							product_gap,
							product_id,
							store_id,
							product_name,
							product_category
					FROM(
							SELECT  g.identify_code,
									g.product_gap, 
									g.product_id, 
									g.store_id, 
									p.product_name, 
									p.product_category
							FROM	product_gap g, product p
							WHERE  g.store_id = p.store_id
							AND	   g.product_id = p.product_id
							AND	   g.store_id = #{storeId}
							AND	   g.identify_code = #{identifyCode}
							ORDER BY g.product_gap DESC
					) 
					WHERE rownum <= #{endIndex}
			)
			WHERE rnum >= #{startIndex}
		]]>
	</select>
	
	<select id="findIdentifyCodeByProductId"  parameterType="map" resultType="string">
		SELECT  identify_code
		FROM 	product_gap
		WHERE	store_id = #{storeId}
		AND		product_id = #{productId}	
	</select>
</mapper>