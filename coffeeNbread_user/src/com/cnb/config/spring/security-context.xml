<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!-- Spring Security 관련 설정 파일 -->

	<!-- 
		<context:component-scan base-package="com.cnb.security"/>
	-->
	<!-- Password 암호화 처리 bean -->
	<!-- 
		<beans:bean name="passwordEncoder" 
							 class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	 -->
	 
	<!-- 
		http태그 : 웹 인증/권한체크 처리를 위한 설정을 하는 태그.
		  하위태그
		  	intecept-url : 어떤 url 경로 요청은 어떤 권한이 있어야 하는 지 설정(경로-권한 매칭)
		  						하위 url 경로 부터 잡아야 한다.
		  						속성 : pattern - url 패턴 지정, access - 권한지정 (Spring 시큐리티 EL 표현식사용 - 681P)
		  						EL 표현식 : hasRole('권한명') - 하나의 권한지정
		  						                hasAnyRole('권한', '권한' [, ...]) - 여러권한 지정.
		  						                isAuthenticated() - 인증한(로그인한) 사용자.
		  						                permitAll - 인증/권한이 필요없는 경우.
		  						                표현식 앞에  ! - not

			form-login : 로그인 관련 설정
				속성 
					- login-page="로그인폼 요청 url" 
							- 로그인 안한사람이 isAuthenticated() 가 필요한 요청했을때 이동할 페이지.
				    - login-processing-url="로그인처리요청하는 url경로"
				    
			logout : 로그아웃 관련 설정
					- logout-url="로그아웃처리 요청 url"
					
			authentication-success-handler-ref="" => 로그인 성공시 이동할 컨트롤러 지정가능 (로그인 성공시 Session 사용)
	 -->
	<http>
	
		
		<!-- 
 * 관리자 - ROLE_CNB_ADMIN
 * 매점 - ROLE_CNB_STORE
 * 일반 유저 - ROLE_CNB_USER
 --> 
 
 
	
		<intercept-url pattern="/store/**" access="hasRole('ROLE_CNB_STORE')"/>
		<intercept-url pattern="/user/**" access="hasAnyRole('ROLE_CNB_USER', 'ROLE_CNB_STORE', 'ROLE_CNB_ADMIN')"/>
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_CNB_ADMIN')"/>
		<intercept-url pattern="/**" access="permitAll"/>
		
		<form-login
						login-page="/login_form.do"
						login-processing-url="/login.do"
						username-parameter="userId"
						password-parameter="userPassword"
						always-use-default-target="false"
						authentication-failure-handler-ref="loginFailHandler"
						default-target-url="/index.do"/>
		<logout logout-url="/logout.do" logout-success-url="/index.do"/>
		
		<!-- 사용자가 권한이 없는 요청을 한 경우 이동할 url 등록 , 등록하지 않으면 403 에러페이지.-->
		<access-denied-handler error-page="/error/access_denied.do"/>
	</http>
	<!-- 인증(로그인) 처리를 담당할 bean 등록 => AuthenticationProvider -->
	<authentication-manager>
		<authentication-provider ref="userAuthenticationProvider"/>
	</authentication-manager>
	
</beans:beans>

















